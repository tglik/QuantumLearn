OPENQASM 2.0;
include "qelib1.inc";
gate unitary q0 { u(pi/2,pi,-pi) q0; }
gate multiplexer_dg q0 { unitary q0; }
gate isometry_to_uncompute_dg q0 { multiplexer_dg q0; }
gate state_preparation(param0,param1) q0 { isometry_to_uncompute_dg q0; }
gate initialize(param0,param1) q0 { reset q0; state_preparation(0.7071067811865475,-0.7071067811865475) q0; }
gate mcx q0,q1,q2,q3 { h q3; p(pi/8) q0; p(pi/8) q1; p(pi/8) q2; p(pi/8) q3; cx q0,q1; p(-pi/8) q1; cx q0,q1; cx q1,q2; p(-pi/8) q2; cx q0,q2; p(pi/8) q2; cx q1,q2; p(-pi/8) q2; cx q0,q2; cx q2,q3; p(-pi/8) q3; cx q1,q3; p(pi/8) q3; cx q2,q3; p(-pi/8) q3; cx q0,q3; p(pi/8) q3; cx q2,q3; p(-pi/8) q3; cx q1,q3; p(pi/8) q3; cx q2,q3; p(-pi/8) q3; cx q0,q3; h q3; }
gate gate_U__s_ q0,q1,q2,q3 { h q0; h q1; h q2; h q3; x q0; x q1; x q2; x q3; h q3; mcx q0,q1,q2,q3; h q3; x q0; x q1; x q2; x q3; h q0; h q1; h q2; h q3; }
qreg v[32];
qreg out[1];
qreg c[7];
qreg tr[11];
creg cbits[32];
initialize(0.7071067811865475,-0.7071067811865475) out[0];
x v[1];
h v[4];
h v[5];
x v[6];
x v[7];
x v[8];
x v[9];
x v[10];
x v[15];
x v[19];
x v[20];
x v[21];
x v[22];
x v[24];
x v[26];
x v[27];
x v[29];
barrier v[0],v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9],v[10],v[11],v[12],v[13],v[14],v[15],v[16],v[17],v[18],v[19],v[20],v[21],v[22],v[23],v[24],v[25],v[26],v[27],v[28],v[29],v[30],v[31],out[0];
cx v[0],c[0];
cx v[1],c[0];
cx v[4],c[0];
cx v[5],c[0];
cx v[4],c[1];
cx v[5],c[1];
cx v[28],c[1];
cx v[29],c[1];
cx v[2],c[2];
cx v[3],c[2];
cx v[4],c[2];
cx v[5],c[2];
cx v[4],c[3];
cx v[5],c[3];
cx v[14],c[3];
cx v[15],c[3];
cx v[4],c[4];
cx v[5],c[4];
cx v[20],c[4];
cx v[21],c[4];
cx v[4],c[5];
cx v[5],c[5];
cx v[6],c[5];
cx v[7],c[5];
cx v[4],c[6];
cx v[5],c[6];
cx v[12],c[6];
cx v[13],c[6];
ccx c[0],c[1],tr[0];
ccx c[2],c[3],tr[1];
ccx c[4],c[5],tr[2];
ccx tr[0],tr[1],tr[3];
ccx tr[2],c[6],tr[4];
ccx tr[3],tr[4],out[0];
ccx tr[2],c[6],tr[4];
ccx tr[0],tr[1],tr[3];
ccx c[4],c[5],tr[2];
ccx c[2],c[3],tr[1];
ccx c[0],c[1],tr[0];
cx v[0],c[0];
cx v[1],c[0];
cx v[4],c[0];
cx v[5],c[0];
cx v[4],c[1];
cx v[5],c[1];
cx v[28],c[1];
cx v[29],c[1];
cx v[2],c[2];
cx v[3],c[2];
cx v[4],c[2];
cx v[5],c[2];
cx v[4],c[3];
cx v[5],c[3];
cx v[14],c[3];
cx v[15],c[3];
cx v[4],c[4];
cx v[5],c[4];
cx v[20],c[4];
cx v[21],c[4];
cx v[4],c[5];
cx v[5],c[5];
cx v[6],c[5];
cx v[7],c[5];
cx v[4],c[6];
cx v[5],c[6];
cx v[12],c[6];
cx v[13],c[6];
barrier v[0],v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9],v[10],v[11],v[12],v[13],v[14],v[15],v[16],v[17],v[18],v[19],v[20],v[21],v[22],v[23],v[24],v[25],v[26],v[27],v[28],v[29],v[30],v[31],out[0],c[0],c[1],c[2],c[3],c[4],c[5],c[6],tr[0],tr[1],tr[2],tr[3],tr[4],tr[5],tr[6],tr[7],tr[8],tr[9],tr[10];
gate_U__s_ v[0],v[1],v[2],v[3];
cx v[0],c[0];
cx v[1],c[0];
cx v[4],c[0];
cx v[5],c[0];
cx v[4],c[1];
cx v[5],c[1];
cx v[28],c[1];
cx v[29],c[1];
cx v[2],c[2];
cx v[3],c[2];
cx v[4],c[2];
cx v[5],c[2];
cx v[4],c[3];
cx v[5],c[3];
cx v[14],c[3];
cx v[15],c[3];
cx v[4],c[4];
cx v[5],c[4];
cx v[20],c[4];
cx v[21],c[4];
cx v[4],c[5];
cx v[5],c[5];
cx v[6],c[5];
cx v[7],c[5];
cx v[4],c[6];
cx v[5],c[6];
cx v[12],c[6];
cx v[13],c[6];
ccx c[0],c[1],tr[0];
ccx c[2],c[3],tr[1];
ccx c[4],c[5],tr[2];
ccx tr[0],tr[1],tr[3];
ccx tr[2],c[6],tr[4];
ccx tr[3],tr[4],out[0];
ccx tr[2],c[6],tr[4];
ccx tr[0],tr[1],tr[3];
ccx c[4],c[5],tr[2];
ccx c[2],c[3],tr[1];
ccx c[0],c[1],tr[0];
cx v[0],c[0];
cx v[1],c[0];
cx v[4],c[0];
cx v[5],c[0];
cx v[4],c[1];
cx v[5],c[1];
cx v[28],c[1];
cx v[29],c[1];
cx v[2],c[2];
cx v[3],c[2];
cx v[4],c[2];
cx v[5],c[2];
cx v[4],c[3];
cx v[5],c[3];
cx v[14],c[3];
cx v[15],c[3];
cx v[4],c[4];
cx v[5],c[4];
cx v[20],c[4];
cx v[21],c[4];
cx v[4],c[5];
cx v[5],c[5];
cx v[6],c[5];
cx v[7],c[5];
cx v[4],c[6];
cx v[5],c[6];
cx v[12],c[6];
cx v[13],c[6];
barrier v[0],v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9],v[10],v[11],v[12],v[13],v[14],v[15],v[16],v[17],v[18],v[19],v[20],v[21],v[22],v[23],v[24],v[25],v[26],v[27],v[28],v[29],v[30],v[31],out[0],c[0],c[1],c[2],c[3],c[4],c[5],c[6],tr[0],tr[1],tr[2],tr[3],tr[4],tr[5],tr[6],tr[7],tr[8],tr[9],tr[10];
gate_U__s_ v[0],v[1],v[2],v[3];
measure v[0] -> cbits[0];
measure v[1] -> cbits[1];
measure v[2] -> cbits[2];
measure v[3] -> cbits[3];
measure v[4] -> cbits[4];
measure v[5] -> cbits[5];
measure v[6] -> cbits[6];
measure v[7] -> cbits[7];
measure v[8] -> cbits[8];
measure v[9] -> cbits[9];
measure v[10] -> cbits[10];
measure v[11] -> cbits[11];
measure v[12] -> cbits[12];
measure v[13] -> cbits[13];
measure v[14] -> cbits[14];
measure v[15] -> cbits[15];
measure v[16] -> cbits[16];
measure v[17] -> cbits[17];
measure v[18] -> cbits[18];
measure v[19] -> cbits[19];
measure v[20] -> cbits[20];
measure v[21] -> cbits[21];
measure v[22] -> cbits[22];
measure v[23] -> cbits[23];
measure v[24] -> cbits[24];
measure v[25] -> cbits[25];
measure v[26] -> cbits[26];
measure v[27] -> cbits[27];
measure v[28] -> cbits[28];
measure v[29] -> cbits[29];
measure v[30] -> cbits[30];
measure v[31] -> cbits[31];
